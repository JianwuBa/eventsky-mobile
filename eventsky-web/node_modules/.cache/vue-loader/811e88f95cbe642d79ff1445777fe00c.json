{"remainingRequest":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/viewLive.vue?vue&type=style&index=0&id=ada4256c&lang=less&scoped=true&","dependencies":[{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/viewLive.vue","mtime":1622798221184},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGl2ZXsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAyMjdweDsKfQo="},{"version":3,"sources":["viewLive.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;AACA","file":"viewLive.vue","sourceRoot":"src/views/live","sourcesContent":["<template>\n    <div  class=\"live\">\n        <div id=\"remote-playerlist\">\n        </div>\n    </div>\n</template>\n<script>\nimport {getLiveViews} from '@/api/liveService.js'\nimport AgoraRTC from \"agora-rtc-sdk-ng\"\n    export default {\n        data(){\n            return{\n                //活动ID\n                eventId:'',\n                //声网 项目ID\n                appid: \"\",\n                //直播房间\n                channel: \"\", //webId\n                //房间内 用户ID\n                uid: 0,\n               \n                //声网token\n                token: \"\",\n                //角色 （主播和观众）\n                role: \"audience\",\n                //声网  直播客户端\n                client :null,\n                \n                //直播状态\n                isLive:null,\n                //\n                remoteUsers:{},\n                // 多人观看video 数组\n                videoArr:[],\n            }\n        },\n        methods:{\n            async liveViews(){\n                await getLiveViews(this.eventId).then(res => {\n                    if(res.data.rspCode== 1){\n                        let data = res.data.data\n                        console.log(data)\n                        this.appid = data.appId\n                        this.channel = data.webId\n                        this.isLive = data.status\n                        this.lhid = data.historyId\n                        this.token = data.token\n\n\n                        if(this.isLive == 3) {\n                            var browerSupport =  AgoraRTC.checkSystemRequirements();\n                            if(browerSupport) {\n                                this.client =   AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n                                //screenShareClient = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n                            } else {\n                                // $(\"#notice_content\").html(\"微信直播暂不支持<br/> 请复制直播链接，到手机浏览器里观看<br/> https://yoopay.cn/live/audience/${liveroom.webId}\");\n                                // $(\"#notice_dialog\").modal('show');\n                            // return;\n                            }\n                            try {\n                                this.join();\n                            } catch (error) {\n                                console.error('join error');\n                                console.error(error);\n                            } finally {\n                                console.log('finally')\n                            }\n                        }\n                    }\n                    \n                })\n            },\n            async join() {\n                // create Agora client\n                this.client.setClientRole(this.role);\n\n                // join the channel\n                this.uid = await this.client.join(this.appid, this.channel, this.token || null);\n                console.log(\"audience uid:\" + this.uid);\n                // add event listener to play remote tracks when remote user publishs.\n                this.client.on(\"user-published\", this.handleUserPublished);\n                this.client.on(\"user-unpublished\", this.handleUserUnpublished);\n                //直播场景下，该回调提示有主播加入了频道，并返回该主播的 ID。如果在加入之前，已经有主播在频道中了，新加入的用户也会收到已有主播加入频道的回调\n                this.client.on(\"user-joined\", this.handleUserJoined);\n\n                this.client.on(\"token-privilege-did-expire\", function(){\n                    console.log(\"onTokenPrivilegeWillExpire\");\n                    //进行重新申请 Token 操作后\n                    //client.renewToken(token);\n                });\n                this.client.on(\"token-privilege-did-expire\", function(){\n                    console.log(\"onTokenPrivilegeDidExpire\");\n                    //进行重新申请 Token 操作后\n                    //client.renewToken(token);\n                });\n                //initStats();\n            },\n\n                            \n           \n\n      \n            \n            //活动星空结束直播\n        },\n        async created(){\n            this.eventId = this.$route.params.pathMatch\n            this.liveViews()\n          \n            \n        },\n        handleUserJoined(user) {\n            const id = user.uid;\n                console.log(\"handleUserJoined:\" + id);\n        },\n        handleUserPublished(user, mediaType) {\n            console.log(\"handleUserPublished\");\n            const id = user.uid;\n            this.remoteUsers[id] = user;\n            this.subscribe(user, mediaType);\n            // $(\"#cover-div\").hide();\n            //controls=\"controls\"\n            //$(\"#live-status\").html(\"Living...\");\n        },\n        handleUserUnpublished(user) {\n            console.log(\"handleUserUnpublished\");\n            const id = user.uid;\n            delete this.remoteUsers[id];\n            // $(`#player-wrapper-${id}`).remove();\n            // $(\"#cover-div\").show();\n            //$(\"#live-status\").html(\"No Live\");\n        },\n        async subscribe(user, mediaType) {\n            const uid = user.uid;\n            // subscribe to a remote user\n            await this.client.subscribe(user, mediaType);\n            console.log(\"subscribe success\");\n            if (mediaType === 'video') {\n                const player = this.$(`\n                <div id=\"player-wrapper-${uid}\">\n                    <div id=\"player-${uid}\" class=\"player\"></div>\n                </div>  `);\n                this.$(\"#remote-playerlist\").append(player);\n                user.videoTrack.play(`player-${uid}`);\n                // $(\".agora_video_player\").attr(\"controls\", true);\n                // $(\".player\").show();\n            }\n            if (mediaType === 'audio') {\n                user.audioTrack.play();\n            }\n        },\n        async leave() {\n            // remove remote users and player views\n            this.remoteUsers = {};\n            this.$(\"#remote-playerlist\").html(\"\");\n            // leave the channel\n            await this.client.leave();\n            //$(\"#local-player-name\").text(\"\");\n            //$(\"#btn-look\").attr(\"disabled\", false);\n            //$(\"#btn-leave\").attr(\"disabled\", true);\n            //destructStats();\n            console.log(\"client leaves channel success\");\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .live{\n        width: 100%;\n        height: 227px;\n    }\n</style>"]}]}