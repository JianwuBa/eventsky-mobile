{"remainingRequest":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/Live.vue?vue&type=style&index=0&id=773a5025&lang=less&scoped=true&","dependencies":[{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/Live.vue","mtime":1622614530507},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGl2ZXsKICAgIHBhZGRpbmc6IDEyMHB4IDAgMTUwcHg7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgYmFja2dyb3VuZDogc2t5Ymx1ZTsKfQo="},{"version":3,"sources":["Live.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;AACA;AACA","file":"Live.vue","sourceRoot":"src/views/live","sourcesContent":["<template>\n    <div>\n        <div ref=\"live\" class=\"live\">\n            <el-button @click=\"livePrestart\" type=\"success\">开始直播</el-button>\n            <div id=\"local-player\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {postPrestart} from '@/api/liveService.js'\nimport \"./agora/AgoraRTC_N-4.3.0.js\"\n\n    export default {\n        data(){\n            return{\n                //屏幕高度\n                clientHeight:'',\n                //活动ID\n                eventId:'',\n               //声网参数\n                appid: \"\",\n                channel: \"\", //webId\n                uid: 0,\n                lhid: 0,\n                token: \"\",\n                role: \"host\",\n\n\n                client :null,\n\n                localTracks :{\n                    videoTrack: null,\n                    audioTrack: null\n                },\n\n                mics : [], // all microphones devices you can use\n                cams : [], // all cameras devices you can use\n                currentMic:null, // the microphone you are using\n                currentCam:null, // the camera you are using\n\n                videoProfiles : [\n                    { label: \"480p_1\", detail: \"640×480, 15fps, 500Kbps\", value: \"480p_1\" },\n                    { label: \"480p_2\", detail: \"640×480, 30fps, 1000Kbps\", value: \"480p_2\" },\n                    { label: \"720p_1\", detail: \"1280×720, 15fps, 1130Kbps\", value: \"720p_1\" },\n                    { label: \"720p_2\", detail: \"1280×720, 30fps, 2000Kbps\", value: \"720p_2\" },\n                    { label: \"1080p_1\", detail: \"1920×1080, 15fps, 2080Kbps\", value: \"1080p_1\" },\n                    { label: \"1080p_2\", detail: \"1920×1080, 30fps, 3000Kbps\", value: \"1080p_2\" },\n                    { label: \"200×640\", detail: \"200×640, 30fps\", value: { width: 200, height: 640, frameRate: 30 } } // custom video profile\n                ],\n\n                curVideoProfile:null\n            }\n        },\n        methods:{\n            async livePrestart(){\n                postPrestart(this.eventId).then(res => {\n                    console.log(res)\n                    if(res.data.rspCode == 1){\n                        let data = res.data.data\n                        this.appid = data.appId\n                        this.channel = data.channel\n                        this.uid = data.uid\n                        this.lhid = data.historyId\n                        this.token = data.token\n                    }\n                })\n                try {\n                    await this.startLive();\n                    //updateLiveStatus(webId, lhid, \"LIVING\");\n                    //volumeAnimation = requestAnimationFrame(setVolumeWave);\n                } catch (error) {\n                    console.error('start live failed!');\n                    console.error(error);\n                    // leaveLive();\n                    var errorCode = error.code;\n                    var errMsg = \"开启直播失败,\";\n                    if (errorCode === 'DEVICE_NOT_FOUND') {\n                        errMsg += \"未找到摄像头或麦克风设备!\";\n                    }\n                    errMsg += \"\\n详细错误信息\\n\" + error;\n                    alert(errMsg);\n                } finally {\n                    //$(\"#btn-stop-live\").attr(\"disabled\", false);\n                    //$(\"#enable-beauty\").attr(\"disabled\", false);\n                    //$(\"#disable-beauty\").attr(\"disabled\", true);\n                }\n            },\n            async startLive() {\n                // create Agora client\n                this.client.setClientRole(this.role);\n\n                // join the channel\n                this.uid = await this.client.join(this.appid, this.channel, this.token || null, this.uid);\n\n                // create local audio and video tracks\n                this.localTracks.audioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n                this.localTracks.videoTrack = await AgoraRTC.createCameraVideoTrack({ encoderConfig: this.curVideoProfile.value });\n                this.localTracks.audioTrack.setVolume(200);\n                const level = this.localTracks.audioTrack.getVolumeLevel();\n                console.log(\"local stream audio level\", level);\n                // play local video track\n                this.localTracks.videoTrack.play(\"local-player\");\n                \n                //$(\"#local-player-name\").text(`localTrack(${options.uid})`);\n                // publish local tracks to channel\n                await this.client.publish([this.localTracks.audioTrack, this.localTracks.videoTrack]);\n                console.log(\"publish success\");\n                // client.on(\"user-left\", handleUserLeft);\n                // client.on(\"connection-state-change\", handleStateChange);\n                // client.on(\"token-privilege-will-expire\", function() {\n                //     console.log(\"onTokenPrivilegeWillExpire\");\n                //     //进行重新申请 Token 操作后\n                //     //client.renewToken(token);\n                // });\n                // client.on(\"token-privilege-did-expire\", function() {\n                //     console.log(\"onTokenPrivilegeDidExpire\");\n                //     $(\"#verification-dialog-3\").modal(\"show\");\n                //     leaveLive();\n                //     //进行重新申请 Token 操作后\n                //     //client.renewToken(token);\n                // });\n                //initStats();\n            },\n\n            initVideoProfiles() {\n              \n                this.curVideoProfile = this.videoProfiles[3];\n            }\n\n        },\n        mounted(){\n           this.clientHeight = `${document.documentElement.clientHeight}`;\n           let that = this\n           window.onresize = function(){\n                that.clientHeight =  `${document.documentElement.clientHeight}`;\n                if(that.$refs.live){\n                    that.$refs.live.style.minHeight = that.clientHeight + 'px';\n                }\n            }\n        },\n        created(){\n             this.eventId = this.$route.params.pathMatch\n\n                var browerSupport = AgoraRTC.checkSystemRequirements();\n                if (browerSupport) {\n                    this.client = AgoraRTC.createClient({ mode: \"live\", codec: \"h264\" });\n                    //screenShareClient = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n                } else {\n                    alert(\"The Brower is not support live!\");\n                    return;\n                }\n                this.initVideoProfiles();\n        },\n        watch:{\n            clientHeight(clientHeight){\n               this.$refs.live.style.minHeight = clientHeight + 'px';\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .live{\n        padding: 120px 0 150px;\n        box-sizing: border-box;\n        background: skyblue;\n    }\n</style>"]}]}