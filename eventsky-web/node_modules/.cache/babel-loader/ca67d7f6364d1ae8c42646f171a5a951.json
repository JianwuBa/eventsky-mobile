{"remainingRequest":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/babel-loader/lib/index.js!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/utils/request.js","dependencies":[{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/utils/request.js","mtime":1622615310159},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKCi8qKioqICAgcmVxdWVzdC5qcyAgICoqKiovCi8vIOWvvOWFpWF4aW9zCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vIOS9v+eUqGVsZW1lbnQtdWkgTWVzc2FnZeWBmua2iOaBr+aPkOmGkgoKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgZ2V0Q29va2llIGZyb20gJ2pzLWNvb2tpZSc7IC8vMS4g5Yib5bu65paw55qEYXhpb3Plrp7kvovvvIwKCnZhciBzZXJ2aWNlID0gYXhpb3MuY3JlYXRlKHsKICAvLyDlhazlhbHmjqXlj6MtLei/memHjOazqOaEj+WQjumdouS8muiusgogIGJhc2VVUkw6IHByb2Nlc3MuZW52LkJBU0VfQVBJLAogIC8vIOi2heaXtuaXtumXtCDljZXkvY3mmK9tc++8jOi/memHjOiuvue9ruS6hjNz55qE6LaF5pe25pe26Ze0CiAgdGltZW91dDogMyAqIDEwMDAKfSk7IC8vIDIu6K+35rGC5oum5oiq5ZmoCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgLy/lj5Hor7fmsYLliY3lgZrnmoTkuIDkupvlpITnkIbvvIzmlbDmja7ovazljJbvvIzphY3nva7or7fmsYLlpLTvvIzorr7nva50b2tlbizorr7nva5sb2FkaW5n562J77yM5qC55o2u6ZyA5rGC5Y675re75YqgCiAgY29uZmlnLmRhdGEgPSBKU09OLnN0cmluZ2lmeShjb25maWcuZGF0YSk7IC8v5pWw5o2u6L2s5YyWLOS5n+WPr+S7peS9v+eUqHFz6L2s5o2iCgogIGNvbmZpZy5oZWFkZXJzID0gewogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnIC8v6YWN572u6K+35rGC5aS0CgogIH07IC8v5rOo5oSP5L2/55SodG9rZW7nmoTml7blgJnpnIDopoHlvJXlhaVjb29raWXmlrnms5XmiJbogIXnlKjmnKzlnLBsb2NhbFN0b3JhZ2XnrYnmlrnms5XvvIzmjqjojZBqcy1jb29raWUKCiAgdmFyIHRva2VuID0gZ2V0Q29va2llKCflkI3np7AnKTsgLy/ov5nph4zlj5Z0b2tlbuS5i+WJje+8jOS9oOiCr+WumumcgOimgeWFiOaLv+WIsHRva2VuLOWtmOS4gOS4iwoKICBpZiAodG9rZW4pIHsKICAgIGNvbmZpZy5wYXJhbXMgPSB7CiAgICAgICd0b2tlbic6IHRva2VuCiAgICB9OyAvL+WmguaenOimgeaxguaQuuW4puWcqOWPguaVsOS4rQoKICAgIGNvbmZpZy5oZWFkZXJzLnRva2VuID0gdG9rZW47IC8v5aaC5p6c6KaB5rGC5pC65bim5Zyo6K+35rGC5aS05LitCiAgfQoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyAzLuWTjeW6lOaLpuaIquWZqAoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8v5o6l5pS25Yiw5ZON5bqU5pWw5o2u5bm25oiQ5Yqf5ZCO55qE5LiA5Lqb5YWx5pyJ55qE5aSE55CG77yM5YWz6ZetbG9hZGluZ+etiQogIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlKQogIHJldHVybiByZXNwb25zZTsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLyoqKioqIOaOpeaUtuWIsOW8guW4uOWTjeW6lOeahOWkhOeQhuW8gOWniyAqKioqKi8KICBpZiAoZXJyb3IgJiYgZXJyb3IucmVzcG9uc2UpIHsKICAgIC8vIDEu5YWs5YWx6ZSZ6K+v5aSE55CGCiAgICAvLyAyLuagueaNruWTjeW6lOeggeWFt+S9k+WkhOeQhgogICAgc3dpdGNoIChlcnJvci5yZXNwb25zZS5zdGF0dXMpIHsKICAgICAgY2FzZSA0MDA6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfplJnor6/or7fmsYInOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA0MDE6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfmnKrmjojmnYPvvIzor7fph43mlrDnmbvlvZUnOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA0MDM6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfmi5Lnu53orr/pl64nOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA0MDQ6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfor7fmsYLplJnor68s5pyq5om+5Yiw6K+l6LWE5rqQJzsKICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICIvTm90Rm91bmQiOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA0MDU6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfor7fmsYLmlrnms5XmnKrlhYHorrgnOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA0MDg6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfor7fmsYLotoXml7YnOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA1MDA6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfmnI3liqHlmajnq6/lh7rplJknOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA1MDE6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfnvZHnu5zmnKrlrp7njrAnOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA1MDI6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfnvZHnu5zplJnor68nOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA1MDM6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfmnI3liqHkuI3lj6/nlKgnOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA1MDQ6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICfnvZHnu5zotoXml7YnOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA1MDU6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICdodHRw54mI5pys5LiN5pSv5oyB6K+l6K+35rGCJzsKICAgICAgICBicmVhazsKCiAgICAgIGRlZmF1bHQ6CiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICJcdThGREVcdTYzQTVcdTk1MTlcdThCRUYiLmNvbmNhdChlcnJvci5yZXNwb25zZS5zdGF0dXMpOwogICAgfQogIH0gZWxzZSB7CiAgICAvLyDotoXml7blpITnkIYKICAgIGlmIChKU09OLnN0cmluZ2lmeShlcnJvcikuaW5jbHVkZXMoJ3RpbWVvdXQnKSkgewogICAgICBNZXNzYWdlLmVycm9yKCfmnI3liqHlmajlk43lupTotoXml7bvvIzor7fliLfmlrDlvZPliY3pobUnKTsKICAgIH0KCiAgICBlcnJvci5tZXNzYWdlID0gJ+i/nuaOpeacjeWKoeWZqOWksei0pSc7CiAgfQoKICBNZXNzYWdlLmVycm9yKGVycm9yLm1lc3NhZ2UpOwogIC8qKioqKiDlpITnkIbnu5PmnZ8gKioqKiovCiAgLy/lpoLmnpzkuI3pnIDopoHplJnor6/lpITnkIbvvIzku6XkuIrnmoTlpITnkIbov4fnqIvpg73lj6/nnIHnlaUKCiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShlcnJvci5yZXNwb25zZSk7Cn0pOyAvLzQu5a+85YWl5paH5Lu2CgpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/utils/request.js"],"names":["axios","Message","getCookie","service","create","baseURL","process","env","BASE_API","timeout","interceptors","request","use","config","data","JSON","stringify","headers","token","params","error","Promise","reject","response","status","message","window","location","href","includes","resolve"],"mappings":"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","sourcesContent":["/****   request.js   ****/\n// 导入axios\nimport axios from 'axios'\n// 使用element-ui Message做消息提醒\nimport { Message } from 'element-ui';\nimport getCookie from 'js-cookie'\n//1. 创建新的axios实例，\nconst service = axios.create({\n        // 公共接口--这里注意后面会讲\n        baseURL: process.env.BASE_API,\n        // 超时时间 单位是ms，这里设置了3s的超时时间\n        timeout: 3 * 1000\n    })\n    // 2.请求拦截器\nservice.interceptors.request.use(config => {\n    //发请求前做的一些处理，数据转化，配置请求头，设置token,设置loading等，根据需求去添加\n    config.data = JSON.stringify(config.data); //数据转化,也可以使用qs转换\n    config.headers = {\n            'Content-Type': 'application/x-www-form-urlencoded' //配置请求头\n        }\n        //注意使用token的时候需要引入cookie方法或者用本地localStorage等方法，推荐js-cookie\n    const token = getCookie('名称'); //这里取token之前，你肯定需要先拿到token,存一下\n    if (token) {\n        config.params = { 'token': token } //如果要求携带在参数中\n        config.headers.token = token; //如果要求携带在请求头中\n    }\n    return config\n}, error => {\n    Promise.reject(error)\n})\n\n// 3.响应拦截器\nservice.interceptors.response.use(response => {\n        //接收到响应数据并成功后的一些共有的处理，关闭loading等\n        // console.log(response)\n        return response\n    }, error => {\n        /***** 接收到异常响应的处理开始 *****/\n        if (error && error.response) {\n            // 1.公共错误处理\n            // 2.根据响应码具体处理\n            switch (error.response.status) {\n                case 400:\n                    error.message = '错误请求'\n                    break;\n                case 401:\n                    error.message = '未授权，请重新登录'\n                    break;\n                case 403:\n                    error.message = '拒绝访问'\n                    break;\n                case 404:\n                    error.message = '请求错误,未找到该资源'\n                    window.location.href = \"/NotFound\"\n                    break;\n                case 405:\n                    error.message = '请求方法未允许'\n                    break;\n                case 408:\n                    error.message = '请求超时'\n                    break;\n                case 500:\n                    error.message = '服务器端出错'\n                    break;\n                case 501:\n                    error.message = '网络未实现'\n                    break;\n                case 502:\n                    error.message = '网络错误'\n                    break;\n                case 503:\n                    error.message = '服务不可用'\n                    break;\n                case 504:\n                    error.message = '网络超时'\n                    break;\n                case 505:\n                    error.message = 'http版本不支持该请求'\n                    break;\n                default:\n                    error.message = `连接错误${error.response.status}`\n            }\n        } else {\n            // 超时处理\n            if (JSON.stringify(error).includes('timeout')) {\n                Message.error('服务器响应超时，请刷新当前页')\n            }\n            error.message = '连接服务器失败'\n        }\n\n        Message.error(error.message)\n            /***** 处理结束 *****/\n            //如果不需要错误处理，以上的处理过程都可省略\n        return Promise.resolve(error.response)\n    })\n    //4.导入文件\nexport default service"]}]}