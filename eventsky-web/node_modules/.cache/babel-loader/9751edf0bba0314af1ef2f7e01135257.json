{"remainingRequest":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/babel-loader/lib/index.js!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/Live.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/Live.vue","mtime":1622614530507},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Live.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAWA,SAAA,YAAA,QAAA,sBAAA;AACA,OAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,YAAA,EAAA,EAFA;AAGA;AACA,MAAA,OAAA,EAAA,EAJA;AAKA;AACA,MAAA,KAAA,EAAA,EANA;AAOA,MAAA,OAAA,EAAA,EAPA;AAOA;AACA,MAAA,GAAA,EAAA,CARA;AASA,MAAA,IAAA,EAAA,CATA;AAUA,MAAA,KAAA,EAAA,EAVA;AAWA,MAAA,IAAA,EAAA,MAXA;AAcA,MAAA,MAAA,EAAA,IAdA;AAgBA,MAAA,WAAA,EAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAhBA;AAqBA,MAAA,IAAA,EAAA,EArBA;AAqBA;AACA,MAAA,IAAA,EAAA,EAtBA;AAsBA;AACA,MAAA,UAAA,EAAA,IAvBA;AAuBA;AACA,MAAA,UAAA,EAAA,IAxBA;AAwBA;AAEA,MAAA,aAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,MAAA,EAAA,yBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,MAAA,EAAA,0BAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,MAAA,EAAA,2BAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,MAAA,EAAA,2BAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,MAAA,EAAA,4BAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,MAAA,EAAA,4BAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,MAAA,EAAA,gBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,MAAA,EAAA,GAAA;AAAA,UAAA,SAAA,EAAA;AAAA;AAAA,OAPA,CAOA;AAPA,OA1BA;AAoCA,MAAA,eAAA,EAAA;AApCA,KAAA;AAsCA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,YAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,sBAAA,GAAA,CAAA,IAAA,CAAA,OAAA,IAAA,CAAA,EAAA;AACA,wBAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,oBAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,oBAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AACA,oBAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA;AACA,oBAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,SAAA;AACA,oBAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA;AACA,iBAVA;AADA;AAAA;AAAA,uBAaA,KAAA,CAAA,SAAA,EAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBA,gBAAA,OAAA,CAAA,KAAA,CAAA,oBAAA;AACA,gBAAA,OAAA,CAAA,KAAA,cAlBA,CAmBA;;AACA,gBAAA,SApBA,GAoBA,YAAA,IApBA;AAqBA,gBAAA,MArBA,GAqBA,SArBA;;AAsBA,oBAAA,SAAA,KAAA,kBAAA,EAAA;AACA,kBAAA,MAAA,IAAA,eAAA;AACA;;AACA,gBAAA,MAAA,IAAA,0BAAA;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA;;AA1BA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA,KAjCA;AAkCA,IAAA,SAlCA,uBAkCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,IAAA,EAFA,CAIA;;;AAJA;AAAA,uBAKA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,IAAA,IAAA,EAAA,MAAA,CAAA,GAAA,CALA;;AAAA;AAKA,gBAAA,MAAA,CAAA,GALA;AAAA;AAAA,uBAQA,QAAA,CAAA,0BAAA,EARA;;AAAA;AAQA,gBAAA,MAAA,CAAA,WAAA,CAAA,UARA;AAAA;AAAA,uBASA,QAAA,CAAA,sBAAA,CAAA;AAAA,kBAAA,aAAA,EAAA,MAAA,CAAA,eAAA,CAAA;AAAA,iBAAA,CATA;;AAAA;AASA,gBAAA,MAAA,CAAA,WAAA,CAAA,UATA;;AAUA,gBAAA,MAAA,CAAA,WAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA;;AACA,gBAAA,KAXA,GAWA,MAAA,CAAA,WAAA,CAAA,UAAA,CAAA,cAAA,EAXA;AAYA,gBAAA,OAAA,CAAA,GAAA,CAAA,0BAAA,EAAA,KAAA,EAZA,CAaA;;AACA,gBAAA,MAAA,CAAA,WAAA,CAAA,UAAA,CAAA,IAAA,CAAA,cAAA,EAdA,CAgBA;AACA;;;AAjBA;AAAA,uBAkBA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAAA,UAAA,EAAA,MAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAlBA;;AAAA;AAmBA,gBAAA,OAAA,CAAA,GAAA,CAAA,iBAAA,EAnBA,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA,KArEA;AAuEA,IAAA,iBAvEA,+BAuEA;AAEA,WAAA,eAAA,GAAA,KAAA,aAAA,CAAA,CAAA,CAAA;AACA;AA1EA,GAzCA;AAsHA,EAAA,OAtHA,qBAsHA;AACA,SAAA,YAAA,aAAA,QAAA,CAAA,eAAA,CAAA,YAAA;AACA,QAAA,IAAA,GAAA,IAAA;;AACA,IAAA,MAAA,CAAA,QAAA,GAAA,YAAA;AACA,MAAA,IAAA,CAAA,YAAA,aAAA,QAAA,CAAA,eAAA,CAAA,YAAA;;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,GAAA,IAAA,CAAA,YAAA,GAAA,IAAA;AACA;AACA,KALA;AAMA,GA/HA;AAgIA,EAAA,OAhIA,qBAgIA;AACA,SAAA,OAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,SAAA;AAEA,QAAA,aAAA,GAAA,QAAA,CAAA,uBAAA,EAAA;;AACA,QAAA,aAAA,EAAA;AACA,WAAA,MAAA,GAAA,QAAA,CAAA,YAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,CAAA,CADA,CAEA;AACA,KAHA,MAGA;AACA,MAAA,KAAA,CAAA,iCAAA,CAAA;AACA;AACA;;AACA,SAAA,iBAAA;AACA,GA5IA;AA6IA,EAAA,KAAA,EAAA;AACA,IAAA,YADA,wBACA,aADA,EACA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,GAAA,aAAA,GAAA,IAAA;AACA;AAHA;AA7IA,CAAA","sourcesContent":["<template>\n    <div>\n        <div ref=\"live\" class=\"live\">\n            <el-button @click=\"livePrestart\" type=\"success\">开始直播</el-button>\n            <div id=\"local-player\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {postPrestart} from '@/api/liveService.js'\nimport \"./agora/AgoraRTC_N-4.3.0.js\"\n\n    export default {\n        data(){\n            return{\n                //屏幕高度\n                clientHeight:'',\n                //活动ID\n                eventId:'',\n               //声网参数\n                appid: \"\",\n                channel: \"\", //webId\n                uid: 0,\n                lhid: 0,\n                token: \"\",\n                role: \"host\",\n\n\n                client :null,\n\n                localTracks :{\n                    videoTrack: null,\n                    audioTrack: null\n                },\n\n                mics : [], // all microphones devices you can use\n                cams : [], // all cameras devices you can use\n                currentMic:null, // the microphone you are using\n                currentCam:null, // the camera you are using\n\n                videoProfiles : [\n                    { label: \"480p_1\", detail: \"640×480, 15fps, 500Kbps\", value: \"480p_1\" },\n                    { label: \"480p_2\", detail: \"640×480, 30fps, 1000Kbps\", value: \"480p_2\" },\n                    { label: \"720p_1\", detail: \"1280×720, 15fps, 1130Kbps\", value: \"720p_1\" },\n                    { label: \"720p_2\", detail: \"1280×720, 30fps, 2000Kbps\", value: \"720p_2\" },\n                    { label: \"1080p_1\", detail: \"1920×1080, 15fps, 2080Kbps\", value: \"1080p_1\" },\n                    { label: \"1080p_2\", detail: \"1920×1080, 30fps, 3000Kbps\", value: \"1080p_2\" },\n                    { label: \"200×640\", detail: \"200×640, 30fps\", value: { width: 200, height: 640, frameRate: 30 } } // custom video profile\n                ],\n\n                curVideoProfile:null\n            }\n        },\n        methods:{\n            async livePrestart(){\n                postPrestart(this.eventId).then(res => {\n                    console.log(res)\n                    if(res.data.rspCode == 1){\n                        let data = res.data.data\n                        this.appid = data.appId\n                        this.channel = data.channel\n                        this.uid = data.uid\n                        this.lhid = data.historyId\n                        this.token = data.token\n                    }\n                })\n                try {\n                    await this.startLive();\n                    //updateLiveStatus(webId, lhid, \"LIVING\");\n                    //volumeAnimation = requestAnimationFrame(setVolumeWave);\n                } catch (error) {\n                    console.error('start live failed!');\n                    console.error(error);\n                    // leaveLive();\n                    var errorCode = error.code;\n                    var errMsg = \"开启直播失败,\";\n                    if (errorCode === 'DEVICE_NOT_FOUND') {\n                        errMsg += \"未找到摄像头或麦克风设备!\";\n                    }\n                    errMsg += \"\\n详细错误信息\\n\" + error;\n                    alert(errMsg);\n                } finally {\n                    //$(\"#btn-stop-live\").attr(\"disabled\", false);\n                    //$(\"#enable-beauty\").attr(\"disabled\", false);\n                    //$(\"#disable-beauty\").attr(\"disabled\", true);\n                }\n            },\n            async startLive() {\n                // create Agora client\n                this.client.setClientRole(this.role);\n\n                // join the channel\n                this.uid = await this.client.join(this.appid, this.channel, this.token || null, this.uid);\n\n                // create local audio and video tracks\n                this.localTracks.audioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n                this.localTracks.videoTrack = await AgoraRTC.createCameraVideoTrack({ encoderConfig: this.curVideoProfile.value });\n                this.localTracks.audioTrack.setVolume(200);\n                const level = this.localTracks.audioTrack.getVolumeLevel();\n                console.log(\"local stream audio level\", level);\n                // play local video track\n                this.localTracks.videoTrack.play(\"local-player\");\n                \n                //$(\"#local-player-name\").text(`localTrack(${options.uid})`);\n                // publish local tracks to channel\n                await this.client.publish([this.localTracks.audioTrack, this.localTracks.videoTrack]);\n                console.log(\"publish success\");\n                // client.on(\"user-left\", handleUserLeft);\n                // client.on(\"connection-state-change\", handleStateChange);\n                // client.on(\"token-privilege-will-expire\", function() {\n                //     console.log(\"onTokenPrivilegeWillExpire\");\n                //     //进行重新申请 Token 操作后\n                //     //client.renewToken(token);\n                // });\n                // client.on(\"token-privilege-did-expire\", function() {\n                //     console.log(\"onTokenPrivilegeDidExpire\");\n                //     $(\"#verification-dialog-3\").modal(\"show\");\n                //     leaveLive();\n                //     //进行重新申请 Token 操作后\n                //     //client.renewToken(token);\n                // });\n                //initStats();\n            },\n\n            initVideoProfiles() {\n              \n                this.curVideoProfile = this.videoProfiles[3];\n            }\n\n        },\n        mounted(){\n           this.clientHeight = `${document.documentElement.clientHeight}`;\n           let that = this\n           window.onresize = function(){\n                that.clientHeight =  `${document.documentElement.clientHeight}`;\n                if(that.$refs.live){\n                    that.$refs.live.style.minHeight = that.clientHeight + 'px';\n                }\n            }\n        },\n        created(){\n             this.eventId = this.$route.params.pathMatch\n\n                var browerSupport = AgoraRTC.checkSystemRequirements();\n                if (browerSupport) {\n                    this.client = AgoraRTC.createClient({ mode: \"live\", codec: \"h264\" });\n                    //screenShareClient = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n                } else {\n                    alert(\"The Brower is not support live!\");\n                    return;\n                }\n                this.initVideoProfiles();\n        },\n        watch:{\n            clientHeight(clientHeight){\n               this.$refs.live.style.minHeight = clientHeight + 'px';\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .live{\n        padding: 120px 0 150px;\n        box-sizing: border-box;\n        background: skyblue;\n    }\n</style>"],"sourceRoot":"src/views/live"}]}