{"remainingRequest":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/babel-loader/lib/index.js!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/viewLive.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/src/views/live/viewLive.vue","mtime":1622798221184},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huodongxingkong/Desktop/eventsky/eventsky-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["viewLive.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div  class=\"live\">\n        <div id=\"remote-playerlist\">\n        </div>\n    </div>\n</template>\n<script>\nimport {getLiveViews} from '@/api/liveService.js'\nimport AgoraRTC from \"agora-rtc-sdk-ng\"\n    export default {\n        data(){\n            return{\n                //活动ID\n                eventId:'',\n                //声网 项目ID\n                appid: \"\",\n                //直播房间\n                channel: \"\", //webId\n                //房间内 用户ID\n                uid: 0,\n               \n                //声网token\n                token: \"\",\n                //角色 （主播和观众）\n                role: \"audience\",\n                //声网  直播客户端\n                client :null,\n                \n                //直播状态\n                isLive:null,\n                //\n                remoteUsers:{},\n                // 多人观看video 数组\n                videoArr:[],\n            }\n        },\n        methods:{\n            async liveViews(){\n                await getLiveViews(this.eventId).then(res => {\n                    if(res.data.rspCode== 1){\n                        let data = res.data.data\n                        console.log(data)\n                        this.appid = data.appId\n                        this.channel = data.webId\n                        this.isLive = data.status\n                        this.lhid = data.historyId\n                        this.token = data.token\n\n\n                        if(this.isLive == 3) {\n                            var browerSupport =  AgoraRTC.checkSystemRequirements();\n                            if(browerSupport) {\n                                this.client =   AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n                                //screenShareClient = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\n                            } else {\n                                // $(\"#notice_content\").html(\"微信直播暂不支持<br/> 请复制直播链接，到手机浏览器里观看<br/> https://yoopay.cn/live/audience/${liveroom.webId}\");\n                                // $(\"#notice_dialog\").modal('show');\n                            // return;\n                            }\n                            try {\n                                this.join();\n                            } catch (error) {\n                                console.error('join error');\n                                console.error(error);\n                            } finally {\n                                console.log('finally')\n                            }\n                        }\n                    }\n                    \n                })\n            },\n            async join() {\n                // create Agora client\n                this.client.setClientRole(this.role);\n\n                // join the channel\n                this.uid = await this.client.join(this.appid, this.channel, this.token || null);\n                console.log(\"audience uid:\" + this.uid);\n                // add event listener to play remote tracks when remote user publishs.\n                this.client.on(\"user-published\", this.handleUserPublished);\n                this.client.on(\"user-unpublished\", this.handleUserUnpublished);\n                //直播场景下，该回调提示有主播加入了频道，并返回该主播的 ID。如果在加入之前，已经有主播在频道中了，新加入的用户也会收到已有主播加入频道的回调\n                this.client.on(\"user-joined\", this.handleUserJoined);\n\n                this.client.on(\"token-privilege-did-expire\", function(){\n                    console.log(\"onTokenPrivilegeWillExpire\");\n                    //进行重新申请 Token 操作后\n                    //client.renewToken(token);\n                });\n                this.client.on(\"token-privilege-did-expire\", function(){\n                    console.log(\"onTokenPrivilegeDidExpire\");\n                    //进行重新申请 Token 操作后\n                    //client.renewToken(token);\n                });\n                //initStats();\n            },\n\n                            \n           \n\n      \n            \n            //活动星空结束直播\n        },\n        async created(){\n            this.eventId = this.$route.params.pathMatch\n            this.liveViews()\n          \n            \n        },\n        handleUserJoined(user) {\n            const id = user.uid;\n                console.log(\"handleUserJoined:\" + id);\n        },\n        handleUserPublished(user, mediaType) {\n            console.log(\"handleUserPublished\");\n            const id = user.uid;\n            this.remoteUsers[id] = user;\n            this.subscribe(user, mediaType);\n            // $(\"#cover-div\").hide();\n            //controls=\"controls\"\n            //$(\"#live-status\").html(\"Living...\");\n        },\n        handleUserUnpublished(user) {\n            console.log(\"handleUserUnpublished\");\n            const id = user.uid;\n            delete this.remoteUsers[id];\n            // $(`#player-wrapper-${id}`).remove();\n            // $(\"#cover-div\").show();\n            //$(\"#live-status\").html(\"No Live\");\n        },\n        async subscribe(user, mediaType) {\n            const uid = user.uid;\n            // subscribe to a remote user\n            await this.client.subscribe(user, mediaType);\n            console.log(\"subscribe success\");\n            if (mediaType === 'video') {\n                const player = this.$(`\n                <div id=\"player-wrapper-${uid}\">\n                    <div id=\"player-${uid}\" class=\"player\"></div>\n                </div>  `);\n                this.$(\"#remote-playerlist\").append(player);\n                user.videoTrack.play(`player-${uid}`);\n                // $(\".agora_video_player\").attr(\"controls\", true);\n                // $(\".player\").show();\n            }\n            if (mediaType === 'audio') {\n                user.audioTrack.play();\n            }\n        },\n        async leave() {\n            // remove remote users and player views\n            this.remoteUsers = {};\n            this.$(\"#remote-playerlist\").html(\"\");\n            // leave the channel\n            await this.client.leave();\n            //$(\"#local-player-name\").text(\"\");\n            //$(\"#btn-look\").attr(\"disabled\", false);\n            //$(\"#btn-leave\").attr(\"disabled\", true);\n            //destructStats();\n            console.log(\"client leaves channel success\");\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .live{\n        width: 100%;\n        height: 227px;\n    }\n</style>"],"sourceRoot":"src/views/live"}]}